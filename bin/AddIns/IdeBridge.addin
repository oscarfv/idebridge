<AddIn name        = "IdeBridge"
       author      = ""
       copyright   = "prj:///doc/copyright.txt"
       description = "">

	<Manifest>
		<Identity name = "IdeBridge"/>
	</Manifest>

	<Runtime>
		<Import assembly=":ICSharpCode.SharpDevelop">
			<!--<ConditionEvaluator name="ActiveContentExtension" class="ICSharpCode.SharpDevelop.ActiveContentExtensionConditionEvaluator"/>
			<ConditionEvaluator name="ActiveViewContentUntitled" class="ICSharpCode.SharpDevelop.ActiveViewContentUntitledConditionEvaluator"/>
			<ConditionEvaluator name="ActiveWindowState" class="ICSharpCode.SharpDevelop.ActiveWindowStateConditionEvaluator"/>
			<ConditionEvaluator name="SolutionOpen" class="ICSharpCode.SharpDevelop.SolutionOpenConditionEvaluator"/>-->
			<ConditionEvaluator name="DebuggerSupports" class="ICSharpCode.SharpDevelop.Debugging.DebuggerSupportsConditionEvaluator"/>
			<ConditionEvaluator name="IsProcessRunning" class="ICSharpCode.SharpDevelop.Debugging.IsProcessRunningConditionEvaluator"/>
			<!--<ConditionEvaluator name="OpenWindowState" class="ICSharpCode.SharpDevelop.OpenWindowStateConditionEvaluator"/>
			<ConditionEvaluator name="WindowActive" class="ICSharpCode.SharpDevelop.WindowActiveConditionEvaluator"/>
			<ConditionEvaluator name="WindowOpen" class="ICSharpCode.SharpDevelop.WindowOpenConditionEvaluator"/>
			<ConditionEvaluator name="ProjectActive" class="ICSharpCode.SharpDevelop.ProjectActiveConditionEvaluator"/>
			<ConditionEvaluator name="TextContent" class="ICSharpCode.SharpDevelop.DefaultEditor.Conditions.TextContentConditionEvaluator"/>
			<ConditionEvaluator name="BrowserLocation" class="ICSharpCode.SharpDevelop.BrowserDisplayBinding.BrowserLocationConditionEvaluator"/>
			<ConditionEvaluator name="RefactoringProviderSupports" class="ICSharpCode.SharpDevelop.Refactoring.RefactoringProviderSupportsConditionEvaluator"/>
			<ConditionEvaluator name="CanNavigateBack" class="ICSharpCode.SharpDevelop.CanNavigateBackConditionEvaluator"/>
			<ConditionEvaluator name="CanNavigateForward" class="ICSharpCode.SharpDevelop.CanNavigateForwardConditionEvaluator"/>
			<ConditionEvaluator name="CompareProjectProperty" class="ICSharpCode.SharpDevelop.CompareProjectPropertyConditionEvaluator"/>

			<Doozer name="CustomTool" class="ICSharpCode.SharpDevelop.Project.CustomToolDoozer"/>
			<Doozer name="DialogPanel" class="ICSharpCode.SharpDevelop.DialogPanelDoozer"/>
			<Doozer name="DisplayBinding" class="ICSharpCode.SharpDevelop.DisplayBindingDoozer"/>-->
			<Doozer name="Pad" class="ICSharpCode.SharpDevelop.PadDoozer"/>
			<Doozer name="LanguageBinding" class="ICSharpCode.SharpDevelop.LanguageBindingDoozer"/>
			<Doozer name="Parser" class="ICSharpCode.SharpDevelop.ParserDoozer"/>
<!--			<Doozer name="ProjectContentRegistry" class="ICSharpCode.SharpDevelop.ProjectContentRegistryDoozer"/> -->
			<Doozer name="EditAction" class="ICSharpCode.SharpDevelop.DefaultEditor.Codons.EditActionDoozer"/>
<!--			<Doozer name="SyntaxMode" class="ICSharpCode.SharpDevelop.DefaultEditor.Codons.SyntaxModeDoozer"/>
			<Doozer name="BrowserSchemeExtension" class="ICSharpCode.SharpDevelop.BrowserDisplayBinding.SchemeExtensionDoozer"/>-->
			<Doozer name="CodeCompletionBinding" class="ICSharpCode.SharpDevelop.DefaultEditor.Gui.Editor.CodeCompletionBindingDoozer"/>
			<Doozer name="Debugger" class="ICSharpCode.SharpDevelop.Debugging.DebuggerDoozer"/>
	<!--		<Doozer name="Directory" class="ICSharpCode.SharpDevelop.DirectoryDoozer"/>
			<Doozer name="TaskBoundAdditionalLogger" class="ICSharpCode.SharpDevelop.Project.TaskBoundAdditionalLoggerDoozer"/>-->
		</Import>
	</Runtime>

	<Path name = "/SharpDevelop/Workbench/DisplayBindings"/>

	<Path name = "/SharpDevelop/Workbench/Pads">
		<Pad id       = "CompilerMessageView"
		     category = "Main"
		     title    = "${res:MainWindow.Windows.OutputWindow}"
		     icon     = "PadIcons.Output"
		     shortcut = "Control|Alt|O"
		     class    = "ICSharpCode.SharpDevelop.Gui.CompilerMessageView"/>
		<Pad id       = "ErrorList"
		     category = "Main"
		     title    = "${res:MainWindow.Windows.ErrorList}"
		     shortcut = "Control|Alt|K"
		     icon     = "PadIcons.ErrorList"
		     class    = "ICSharpCode.SharpDevelop.Gui.ErrorListPad"/>
	</Path>

	<Path name = "/SharpDevelop/Pads/CompilerMessageView/Toolbar" />

	<Path name = "/SharpDevelop/Pads/ErrorList/Toolbar">
		<ToolbarItem id      = "Errors"
		             type    = "CheckBox"
		             icon    = "Icons.16x16.Error"
		             label   = "${res:MainWindow.Windows.ErrorList.ErrorButton.Label}"
		             tooltip = "${res:MainWindow.Windows.ErrorList.ErrorButton.ToolTip}"
		             class   = "ICSharpCode.SharpDevelop.Gui.ShowErrorsToggleButton"/>
		<ToolbarItem id    = "ErrorsSeparator" type  = "Separator"/>
		<ToolbarItem id    = "Warnings"
		             type  = "CheckBox"
		             icon  = "Icons.16x16.Warning"
		             label = "${res:MainWindow.Windows.ErrorList.WarningButton.Label}"
		             tooltip = "${res:MainWindow.Windows.ErrorList.WarningButton.ToolTip}"
		             class = "ICSharpCode.SharpDevelop.Gui.ShowWarningsToggleButton"/>
		<ToolbarItem id    = "WarningsSeparator" type  = "Separator"/>
		<ToolbarItem id    = "Messages"
		             type  = "CheckBox"
		             icon  = "Icons.16x16.Information"
		             label = "${res:MainWindow.Windows.ErrorList.MessageButton.Label}"
		             tooltip = "${res:MainWindow.Windows.ErrorList.MessageButton.ToolTip}"
		             class = "ICSharpCode.SharpDevelop.Gui.ShowMessagesToggleButton"/>
	</Path>

	<Path name = "/AddIns/DefaultTextEditor/EditActions">
		<EditAction id = "CodeCompletionPopup" class = "ICSharpCode.SharpDevelop.DefaultEditor.Actions.CodeCompletionPopup"  keys = "Control|Space"/>
		<EditAction id = "GoToDefinition"      class = "ICSharpCode.SharpDevelop.DefaultEditor.Actions.GoToDefinition"  keys = "Control|Enter"/>
	</Path>

	<Path name = "/SharpDevelop/Pads/CompilerMessageView/ContextMenu">
		<!--<Include id = "Copy" item = "/SharpDevelop/Workbench/MainMenu/Edit/Copy"/>
		<Include id = "SelectAll" item = "/SharpDevelop/Workbench/MainMenu/Edit/SelectAll"/>-->
		<MenuItem id    = "Clear"
		          icon  = "OutputPad.Toolbar.ClearOutputWindow"
		          label = "${res:MainWindow.Windows.CompilerMessageView.ClearAllButton.ToolTip}"
		          class = "ICSharpCode.SharpDevelop.Gui.ClearOutputWindow"/>
	</Path>

	<Path name = "/SharpDevelop/ViewContent/DefaultTextEditor/ContextMenu">
		<MenuItem id = "Cut"
		          label = "${res:XML.MainMenu.EditMenu.Cut}"
		          icon = "Icons.16x16.CutIcon"
		          type = "Item"
		          shortcut = "Control|X"
		          loadclasslazy = "false"
		          class = "ICSharpCode.SharpDevelop.Commands.Cut"/>
		<MenuItem id = "Copy"
		          label = "${res:XML.MainMenu.EditMenu.Copy}"
		          icon = "Icons.16x16.CopyIcon"
		          type = "Item"
		          shortcut = "Control|C"
		          loadclasslazy = "false"
		          class = "ICSharpCode.SharpDevelop.Commands.Copy"/>
		<MenuItem id = "Paste"
		          label = "${res:XML.MainMenu.EditMenu.Paste}"
		          icon = "Icons.16x16.PasteIcon"
		          type = "Item"
		          shortcut = "Control|V"
		          loadclasslazy = "false"
		          class = "ICSharpCode.SharpDevelop.Commands.Paste"/>
		<MenuItem id = "Delete"
		          label = "${res:XML.MainMenu.EditMenu.Delete}"
		          icon = "Icons.16x16.DeleteIcon"
		          type = "Item"
		          loadclasslazy = "false"
		          class = "ICSharpCode.SharpDevelop.Commands.Delete"/>
		<MenuItem id = "Separator2" type = "Separator" />
		<MenuItem id = "Comment"
		          icon  = "Icons.16x16.CommentRegion"
		          label = "${res:XML.TextAreaContextMenu.CommentUncommentSelection}"
		          class= "ICSharpCode.SharpDevelop.DefaultEditor.Commands.CommentRegion"/>
	</Path>
</AddIn>
